<div class="min-vh-100 p-3" id="customersViewPage">
   <div class="mt-4 text-decoration-none">
      <div class="d-flex justify-content-between">
         <span class="fs-5 fw-semibold">
            <nav aria-label="breadcrumb">
               <ol class="breadcrumb">
                  <li class="breadcrumb-item"><a href="/customers">Customers</a></li>
                  <li class="breadcrumb-item active" aria-current="page">{{rowCust.FullName}}</li>
               </ol>
            </nav>
         </span>
         <button class="btn btn-dark btn-sm" onclick="toggleDialog('editCustomerInfo')" style="height:32px;">
            <i class="bi bi-pencil"></i><small>EDIT CUSTOMER INFORMATION</small>
         </button>
      </div>
   </div>
   <hr class="mt-0">
   <div>
      <div class="bg-black px-4 py-2 d-flex justify-content-between align-items-center">
         <div>
            <span class="me-2 fw-800"><small>APPOINTMENTS</small></span>
            <button class="btn btn-sm btn-outline-light" onclick="toggleDialog('addAppointment')"><i
                  class="bi bi-plus"></i></button>
         </div>
         <form class="d-flex">
            <input class="form-control form-control-sm me-2 p-1 rounded-0" type="search" placeholder="Search"
               aria-label="Search" />
            <button class="btn btn-sm btn-outline-light me-2" type="submit"><small>SEARCH</small> </button>
         </form>
      </div>
      <div class="bg-gray p-4 pt-2 mb-3">
         <table class="table table-hover table-striped table-sm m-0">
            <thead>
               <tr>
                  <th scope="col"> <small>DATE</small></th>
                  <th scope="col"> <small>TIME</small></th>
                  <th scope="col"> <small>SERVICE</small></th>
                  <th scope="col"> <small>SHOP</small></th>
                  <th scope="col"> <small>BARBER</small></th>
                  <th scope="col"> <small>APPOINTMENT STATUS</small></th>
                  <th scope="col" class="justify-content-end" style="width: 40px;"></th>
               </tr>
            </thead>
            <tbody>
               {{#each rowApptApproved}}
               <tr class="align-items-center">
                  <td class="align-middle dateDisplay">{{this.Date}}</td>
                  <td class="align-middle">{{this.TimeIn}} - {{this.TimeOut}}</td>
                  <td class="align-middle">{{this.Service}}</td>
                  <td class="align-middle">{{this.ShopName}}</td>
                  <td class="align-middle">{{this.EmployeeName}}</td>
                  <td class="align-middle">{{this.AppointmentStatus}}</td>
                  <td>
                     <a type="button" class="btn btn-dark btn-sm"
                        href="view{{this.CustomersID}}/cancelAppt{{this.AppointmentID}}"><i class="bi bi-x"></i></a>
                  </td>
               </tr>
               {{/each}}
            </tbody>
         </table>
      </div>
   </div>
   <div>
      <div class="bg-black px-4 py-2 d-flex justify-content-between align-items-center">
         <div>
            <span class="me-2 fw-800"><small>APPOINTMENT HISTORY</small></span>
            <button class="btn btn-sm btn-outline-light" onclick="toggleDialog('addAppointment')"><i
                  class="bi bi-plus"></i></button>
         </div>
         <form class="d-flex">
            <input class="form-control form-control-sm me-2 p-1 rounded-0" type="search" placeholder="Search"
               aria-label="Search" />
            <button class="btn btn-sm btn-outline-light me-2" type="submit"><small>SEARCH</small> </button>
         </form>
      </div>
      <div class="bg-gray p-4 pt-2 mb-3">
         <table class="table table-hover table-striped table-sm m-0">
            <thead>
               <tr>
                  <th scope="col"> <small>DATE</small></th>
                  <th scope="col"> <small>TIME</small></th>
                  <th scope="col"> <small>SERVICE</small></th>
                  <th scope="col"> <small>SHOP</small></th>
                  <th scope="col"> <small>BARBER</small></th>
                  <th scope="col"> <small>STATUS</small></th>
               </tr>
            </thead>
            <tbody>
               {{#each rowApptNot}}
               <tr class="align-items-center">
                  <td class="align-middle dateDisplay">{{this.Date}}</td>
                  <td class="align-middle">{{this.TimeIn}} - {{this.TimeOut}}</td>
                  <td class="align-middle">{{this.Service}}</td>
                  <td class="align-middle">{{this.ShopName}}</td>
                  <td class="align-middle">{{this.EmployeeName}}</td>
                  <td class="align-middle">{{this.AppointmentStatus}}</td>
               </tr>
               {{/each}}
            </tbody>
         </table>
      </div>
   </div>
</div>

{{! DIALOG BOXES }}
<div id="editCustomerInfo" class="dialog bg-black m-auto" style="display: none;">
   <div>
      <div class="card p-4 bg-black">
         <div class="text-center">
            <h6 class="fw-800"> EDIT CUSTOMER INFORMATION </h6>
            <hr>
         </div>
         <div class="center-div pt-2">
            <div>
               <form action="view{{rowCust.CustomersID}}/editCustomerInfo" id="editCustomerInfoForm" method="POST">
                  <input class="form-control form-control-sm mb-2 font-small rounded-0" type="text"
                     value="{{rowCust.firstName}}" name="firstName" style="width: 300px;" />
                  <input class="form-control form-control-sm mb-2 font-small rounded-0" type="text"
                     value="{{rowCust.lastName}}" name="lastName" style="width: 300px;" />
                  <input class="form-control form-control-sm mb-2 font-small rounded-0" type="text"
                     value="{{rowCust.Email}}" name="email" style="width: 300px;" />
                  <input class="form-control form-control-sm mb-2 font-small rounded-0" type="text"
                     value="{{rowCust.Contact}}" name="contact" style="width: 300px;" />
                  <div class="form-check form-check-inline">
                     <input class="form-check-input" type="checkbox" value="1" id="status" name="status" {{#if
                        rowCust.Status}} checked {{/if}}>
                     <label class="form-check-label" for="status">
                        Active
                     </label>
                  </div>
                  {{! hindi ko na ininclude email since its part of login credentials }}
               </form>
               <div class="center-div pt-2" style="width: 300px;">
                  <button class="btn btn-warning rounded-0 col-6 me-1"
                     onclick="document.getElementById('editCustomerInfoForm').submit()">SAVE</button>
                  <button class="btn btn-outline-warning rounded-0 col-6"
                     onclick="toggleDialog('editCustomerInfo','customersViewPage')">CANCEL</button>
               </div>
            </div>
         </div>
      </div>
   </div>
</div>

<div id="addAppointment" class="dialog bg-yellow m-auto" style="display: none;">
   <div>
      <div class="card p-4 bg-black">
         <div class="text-center">
            <h6 class="fw-800"> ADD APPOINTMENT </h6>
            <hr>
         </div>
         <div class="center-div pt-2">
            <div>
               <form action="/customers/view{{rowCust.CustomersID}}/addCustomerAppointment"
                  id="addCustomerAppointmentForm" method="POST">
                  {{!-- SHOP DETAILS --}}
                  <fieldset style="border: 1px solid white; padding: 0 1rem .5rem 1rem" class="mb-2">
                     <legend style="font-size: .9rem; background-color:none; float:none; width:fit-content;">
                        SHOP NAME:
                     </legend>
                     <select class="form-control form-control-sm mb-2 font-small rounded-0" name="shop" id="shop">
                        <option selected disabled hidden>Shop Name</option>
                        {{#each rowsShops}}
                        <option value="{{this.ShopID}}">{{this.shopName}}</option>
                        {{/each}}
                     </select>
                  </fieldset>

                  {{!-- SERVICE DETAILS --}}
                  <fieldset style="border: 1px solid white; padding: 0 1rem .5rem 1rem" class="mb-2">
                     <legend style="font-size: .9rem; background-color:none; float:none; width:fit-content;">
                        SERVICE DETAILS:
                     </legend>
                     <select class="form-control form-control-sm mb-2 font-small rounded-0" name="category"
                        id="category" onchange="changeCustomerApptServices(this)">
                        <option selected disabled hidden>Category</option>
                        {{#each rowsCategory}}
                        <option value="{{this.CategoryID}}">{{this.Name}}</option>
                        {{/each}}
                     </select>
                     <select class="form-control form-control-sm mb-2 font-small rounded-0" name="service"
                        id="customerService" onchange="changeEmployee(this, 'customerAttendingEmp')">
                        <option selected disabled hidden>Service</option>
                     </select>
                     {{!-- <input class="form-control form-control-sm mb-2 font-small rounded-0" name="price"
                        type="text" 23qwplaceholder="Price" style="width: 300px;"> --}}
                  </fieldset>

                  {{!-- WHO AND WHEN --}}
                  <fieldset style="border: 1px solid white; padding: 0 1rem .5rem 1rem" class="mb-2">
                     <legend style="font-size: .9rem; background-color:none; float:none; width:fit-content;">
                        APPOINTMENT DETAILS:
                     </legend>
                     <select class="form-control form-control-sm mb-2 font-small rounded-0" id="customerAttendingEmp"
                        name="employee">
                        <option selected disabled hidden>Attending Employee</option>
                        {{#each rowsEmployee}}
                        {{#if (isBarber EmployeeTypeID)}}
                        <option value="{{this.EmployeeID}}">{{this.FullName}}</option>
                        {{/if}}
                        {{/each}}
                     </select>
                     <input class="form-control form-control-sm mb-2 font-small rounded-0" name="date"
                        id="customerApptDate" type="date" placeholder="Date" style="width: 300px;">
                     <input name="time" id="customerAppointmentTime" style="width: 300px;">
                  </fieldset>

               </form>
               <div class="m-auto center-div pt-2" style="width: 300px;">
                  <button class="btn btn-warning col-6 rounded-0 me-1 fw-800"
                     onclick="document.getElementById('addCustomerAppointmentForm').submit()">
                     <small>SAVE</small></button>
                  <button class="btn btn-outline-warning col-6 rounded-0 fw-800"
                     onclick="toggleDialog('addAppointment')">
                     <small>CANCEL</small></button>
               </div>
            </div>
         </div>
      </div>
   </div>
</div>


<script>
   function changeCustomerApptServices(el) {
      var shopId = $("#shop").val();
      var category = el.value;
      var service = document.getElementById("customerService");
      var services = [];
      fetch("/getInfo/shopservicesview")
         .then((res) => res.json())
         .then((data) => {
            console.log(data)
            for (var i = 0; i < data.length; i++) {
               if (data[i].CategoryID == category && data[i].shopID == shopId) {
                  services.push(data[i]);
               }
            }
         })
         .then((data) => {
            var serviceOptions =
               "<option hidden disabled selected>Service</option>";
            for (var i = 0; i < services.length; i++) {
               serviceOptions +=
                  "<option value=" +
                  services[i].ID +
                  "> " +
                  services[i].Service +
                  " </option>";
            }
            service.innerHTML = serviceOptions;
         });
   }

   function changeEmployee(el, id) {
      var employee = document.getElementById(id);
      var ableEmployees = [];
      var shopId = $("#shop").val();
      fetch("/getInfo/employeeSpecialization")
         .then((res) => res.json())
         .then((data) => {
            console.log(data)
            for (var i = 0; i < data.length; i++) {
               console.log(data[i].ShopServicesID, el.value)
               if (data[i].ShopServicesID == el.value) {
                  ableEmployees.push(data[i]);
               }
            }
            console.log(ableEmployees);
         })
         .then((data) => {
            var empOptions = "<option hidden disabled selected>Employee</option>";
            ableEmployees.forEach((element) => {
               empOptions +=
                  "<option value=" +
                  element.EmployeeID +
                  "> " +
                  element.Name +
                  " </option>";
            });
            employee.innerHTML = empOptions;
         });
   }

   //FOR FLATPICKR -- For changing enabled dates per employee
   //get select element that holds the barber list
   const customerAttendingEmp = document.querySelector("#customerAttendingEmp"); 9

   //Listens to attendingEmp
   customerAttendingEmp.onchange = function () {
      const employee = customerAttendingEmp.value;
      updateDatePicker(employee);
   };

   function updateDatePicker(employee) {
      var days = [
         "Sunday",
         "Monday",
         "Tuesday",
         "Wednesday",
         "Thursday",
         "Friday",
         "Saturday",
      ];
      var nonWorkingDays = [];
      var nwdNumberForm = [];
      var scheduleData, appointments, shopservices;

      fetch("/getInfo/shopservices")
         .then((res) => res.json())
         .then((data) => {
            shopservices = data;
         });

      fetch("/getInfo/appointmentviews")
         .then((res) => res.json())
         .then((data) => {
            appointments = data;
         });

      //get nonworking days
      fetch("/getInfo/schedule")
         .then((res) => res.json())
         .then((data) => {
            scheduleData = data;
            for (var i = 0; i < data.length; i++) {
               if (data[i].EmployeeID == employee && data[i].TimeIn == null) {
                  nonWorkingDays.push(data[i].Date);
               }
            }
         })
         //get non working days index for flatpicker
         .then((data) => {
            for (var i = 0; i < nonWorkingDays.length; i++) {
               if (days.includes(nonWorkingDays[i])) {
                  nwdNumberForm.push(days.indexOf(nonWorkingDays[i]));
               }
            }
         })
         //initializes datepicker with dynamic disabled days
         .then((data) => {
            const myInput = document.querySelector("#customerApptDate");
            const fp = flatpickr(myInput, {
               disable: [
                  function (date) {
                     return nwdNumberForm.includes(date.getDay());
                  },
               ],
               onChange: function (selectedDates, dateStr, instance) {
                  //1. get date
                  var day = selectedDates[0].getDay();
                  //2. get occupied time of chosen date
                  var occupiedTimeSlot = [];
                  for (var i = 0; i < appointments.length; i++) {
                     //check if the appt is of the chosen employee
                     if (appointments[i].EmployeeID == employee) {
                        //check if the appt is of the same date
                        var newDate = new Date(appointments[i].Date);
                        var currentDate =
                           newDate.getFullYear() +
                           "-" +
                           (newDate.getMonth() + 1) +
                           "-" +
                           newDate.getDate();
                        if (currentDate == dateStr) {
                           occupiedTimeSlot.push([
                              appointments[i].TimeIn,
                              appointments[i].TimeOut,
                           ]);
                        }
                     }
                  }
                  //3. get schedule of chosen date
                  //---select timeIn and timeOut from tblsched where empId = employee
                  var daySchedTimeIn, daySchedTimeOut;
                  for (var i = 0; i < scheduleData.length; i++) {
                     //check that the schedule to be returned is of the chosen employee
                     if (scheduleData[i].EmployeeID == employee) {
                        //chech if the returned sched must be the same as the day
                        var a = scheduleData[i].Date;
                        var dayIndex = days.indexOf(a);
                        if (dayIndex == day) {
                           daySchedTimeIn = scheduleData[i].TimeIn;
                           daySchedTimeOut = scheduleData[i].TimeOut;
                           console.log(daySchedTimeOut + " " + daySchedTimeIn);
                        }
                     }
                  }
                  //4. get chosen service and duration
                  var shopId = $("#shop").val();
                  var serviceId = document.getElementById("customerService").value;
                  var duration = 0;
                  for (var i = 0; i < shopservices.length; i++) {
                     if (
                        shopservices[i].shopServicesID == serviceId
                     ) {
                        duration = shopservices[i].Duration;
                     }
                  }
                  $("#customerAppointmentTime").timepicker({
                     minTime: daySchedTimeIn,
                     maxTime: daySchedTimeOut,
                     disableTimeRanges: occupiedTimeSlot,
                     step: duration,
                     disableTextInput: true,
                     timeFormat: "H:i:s",
                  });
               },
            });
         });
   }
</script>